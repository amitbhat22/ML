import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt 
from sklearn.tree import DecisionTreeClassifier
from sklearn.tree import plot_tree 
from sklearn.model_selection import train_test_split 
from sklearn.model_selection import cross_val_score 
from sklearn.metrics import confusion_matrix 
from sklearn.metrics import plot_confusion_matrix


df=pd.read_csv("zoo_data.csv",header=None)


print(df.head())
print(len(df))
print(df.dtypes)
print(df[16].unique())

y=df[16].copy()
print(y.head())


X=df.drop(16, axis=1).copy()
print(X.head())

print(df[12].unique())

pd.get_dummies(X, columns=[12]).head()

X_encoded=pd.get_dummies(X, columns=[12])

print(y.unique())


for i in range(len(y)):
    if y[i] <= 4:
        y[i]=0
    else:
        y[i]=1

print(y.unique())    


X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)
clf_dt = DecisionTreeClassifier(random_state=42)
clf_dt = clf_dt.fit(X_train, y_train)



plot_confusion_matrix(clf_dt, X_test, y_test,cmap=plt.cm.Blues, display_labels=["0", "1"])



plt.figure(figsize=(15,7.5))
plot_tree(clf_dt, 
          filled=True, 
          rounded=True, 
          class_names=["No", "Yes"], 
          feature_names=X.columns)